plugins {
    id 'java'
    id 'idea'
    id 'application'
}
group 'pickjob'
version '0.0.1'
ext.os = org.gradle.internal.os.OperatingSystem.current().isWindows() ? 'win':'linux'

application {
    mainModule = 'pickjob.tool.box'
    mainClass = 'app.App'
}

dependencies {
    // logging
    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    // apache commons
    implementation 'org.apache.commons:commons-lang3:3.8'
    // lettuce
    implementation 'io.lettuce:lettuce-core:5.2.2.RELEASE'
    // jackson
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"


    implementation "org.apache.commons:commons-configuration2:2.7"
    implementation "commons-beanutils:commons-beanutils:1.9.4"

    // rxjava
    implementation "io.reactivex.rxjava3:rxjava:3.0.6"
    // cssfx
    implementation "fr.brouillard.oss:cssfx:11.4.0"

    // ikonli Icon pack
    implementation "org.kordamp.ikonli:ikonli-javafx:${ikonliVersion}"
    implementation "org.kordamp.ikonli:ikonli-fontawesome-pack:${ikonliVersion}"

    // javafx
    implementation "org.openjfx:javafx-base:${fxVersion}:${os}"
    implementation "org.openjfx:javafx-graphics:${fxVersion}:${os}"
    implementation "org.openjfx:javafx-controls:${fxVersion}:${os}"
    implementation "org.openjfx:javafx-fxml:${fxVersion}:${os}"
    implementation "org.openjfx:javafx-media:${fxVersion}:${os}"
    implementation "org.openjfx:javafx-swing:${fxVersion}:${os}"
    implementation "org.openjfx:javafx-web:${fxVersion}:${os}"
}
/*
 *  Plugin: java配置
 */
java {
    modularity.inferModulePath = true
}
compileJava {
    sourceCompatibility = 14
    targetCompatibility = 14
    options.encoding = 'UTF-8'
}
/*
 * Plugin: Appliction
 */
run {
    jvmArgs = [
            '-Dio.netty.tryUnsafe=false',
            '-Dcssfx.log=true',
            '-Dcssfx.log.level=DEBUG'
    ]
    systemProperties.put("file.encoding", "UTF-8")
}
repositories {
    maven {
        url "https://maven.aliyun.com/repository/public"
    }
    jcenter()
    mavenCentral()
}